[
    {
        "code": "CSE5J",
        "title": "Introduction to Programming in Java",
        "description": "Introduces programming in Java for students who have no prior programming experience. Students learn programming and documentation skills, as well as algorithmic problem-solving, and programming methodologies. Introduces computers, compilers, and editors. Students write small to medium-sized programs. This course and CSE 5C and CSE 5P cover similar concepts, but use different programming languages. BecauseCSE 5Jfollowed by\u00a0CSE 11 is a two-quarter alternative to the accelerated course CSE 12A and CSE 12L, engineering majors and students planning on continuing the programming sequence are encouraged to takeCSE 5Jrather than CSE 5C or CSE 5P. Students may not receive credit forCSE 5Jtaken concurrently or subsequently to CSE\u00a012A, CSE 12B, or Computer Engineering 13. (Formerly CMPS 5J.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE12",
        "title": "Computer Systems and Assembly Language and Lab",
        "description": "Introduction to computer systems and assembly language and how computers compute in hardware and software. Topics include digital logic, number systems, data structures, compiling/assembly process, basics of the system software, and computer architecture. Course is 7 credits with integrated laboratories illustrating concepts covered in lecture. Note thatCSE 12assumes some programming experience. Students can show programming experience by taking one of the courses listed in the prerequisite list below or by taking the CSE python Test-out Exam: https://undergrad.soe.ucsc.edu/cse-20-testout-exam\u00a0(FormerlyCSE 12and CSE 12L)",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 5J, orCSE 20, orCSE 30, orBME 160, or equivalent.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Marcelo Siero (msiero2)",
                "Sagnik Nath (sanath)"
            ],
            "Winter": [
                "Marcelo Siero (msiero2)",
                "Sagnik Nath (sanath)"
            ],
            "Spring": [
                "Marcelo Siero (msiero2)",
                "Sagnik Nath (sanath)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE13E",
        "title": "Embedded Systems and C Programming",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE13L",
        "title": "Computer Systems and C Programming Laboratory",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE13S",
        "title": "Comp Sys and C Program",
        "description": "Focuses on C programming, command line, shell programming, editors, debuggers, source code control, and other tools. Examines basic computer systems, algorithm design, and development, data types, and program structures. Develops understanding of process model, compile-link-execute build cycle, language-machine interface, memory, and data representation. Students cannot receive credit for bothCSE 13Sand CSE 13E. Course is 7 credits with integrated laboratory.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 12orBME 160.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Alex Rudnick (ajrudnic)",
                "Kerry Veenstra (veenstra)"
            ],
            "Winter": [
                "Alex Rudnick (ajrudnic)",
                "Kerry Veenstra (veenstra)"
            ],
            "Spring": [
                "Alex Rudnick (ajrudnic)",
                "Kriti Bhargava (kbharga1)",
                "Kerry Veenstra (veenstra)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE16",
        "title": "Applied Discrete Mathematics",
        "description": "Introduction to applications of discrete mathematical systems. Topics include sets, functions, relations, graphs, predicate calculus, mathematical proof methods (induction, contraposition, contradiction), counting methods (permutations, combinations), and recurrences. Examples are drawn from computer science and computer engineering. Knowledge of computer programming is useful before taking this course. Students who do not have prior programming experience are strongly recommended to takeCSE 20orCSE 30before taking this course.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):MATH 19AorMATH 19BorMATH 11BorAM 11Bor AM 15B or ECON 11B.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Alexandra Kolla (akolla)",
                "John T Musacchio (musacchi)"
            ],
            "Winter": [
                "Cedric J A Westphal (cjwestph)",
                "Kyle A Miller (kymiller)"
            ],
            "Spring": [
                "Cedric J A Westphal (cjwestph)",
                "Patrick Tantalo (ptantalo)"
            ]
        }
    },
    {
        "code": "CSE20",
        "title": "Beginning Programming in Python",
        "description": "Provides students with Python programming skills and the ability to design programs and read Python code. Topics include data types, control flow, methods and advanced functions, built-in data structures, and introduction to OOP. No prior programming experience is required. Students may not receive credit forCSE 20after receiving credit forCSE 30. Students with prior programming experience (especially in Python) are encouraged to take CSE Testout Exam to be evaluated for their readiness to takeCSE 30directly: https://undergrad.soe.ucsc.edu/cse-20-testout-exam.",
        "credits": "5",
        "prerequisites": "Antirequisite: Students cannot enroll in this class after receiving a C or better inCSE 30.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Larissa A Munishkina (mlarissa)",
                "Oswald A Campesato (ocampesa)",
                "Hao Yue (hyue11)",
                "Cormac A Flanagan (cormac)"
            ],
            "Winter": [
                "Larissa A Munishkina (mlarissa)",
                "Oswald A Campesato (ocampesa)",
                "Benedict John Paten (bpaten)",
                "Hao Yue (hyue11)"
            ],
            "Spring": [
                "Larissa A Munishkina (mlarissa)",
                "Oswald A Campesato (ocampesa)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE30",
        "title": "Programming Abstractions: Python",
        "description": "Introduction to software development in Python focusing on structuring software in terms of objects endowed with primitive operations. Introduces concepts and techniques via a sequence of concrete case studies. Coursework consists of programming assignments and a final examination. Note thatCSE 30assumes some Python experience, students trained in a different language should self-study Python to prepare forCSE 30. SeeCSE Testout Examfor resources and further information.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 20orBME 160; andMATH 3orMATH 11AorMATH 19AorAM 3orAM 11Aor ECON 11A, or a score of 400 or higher on the mathematics placement examination (MPE).",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Larissa A Munishkina (mlarissa)",
                "Oswald A Campesato (ocampesa)"
            ],
            "Winter": [
                "Larissa A Munishkina (mlarissa)",
                "Oswald A Campesato (ocampesa)",
                "Hao Yue (hyue11)"
            ],
            "Spring": [
                "Larissa A Munishkina (mlarissa)",
                "Oswald A Campesato (ocampesa)",
                "Hao Yue (hyue11)"
            ]
        }
    },
    {
        "code": "CSE40",
        "title": "Machine Learning Basics: Data Analysis and Empirical Methods",
        "description": "Introduction to the basic mathematical concepts and programming abstractions required for modern machine learning, data science, and empirical science. The mathematical foundations include basic probability, linear algebra, and optimization. The programming abstractions include data manipulation and visualization. The principles of empirical analysis, evaluation, critique and reproducibility are emphasized. Mathematical and programming abstractions are grounded in empirical studies including data-driven evidential reasoning, predictive modeling, and causal analysis.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):MATH 19BorMATH 20B, andCSE 30.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Lise Getoor (getoor)"
            ],
            "Winter": [
                "Alex Rudnick (ajrudnic)"
            ],
            "Spring": [
                "Niloofar Montazeri (nimontaz)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE50",
        "title": "Business Information Systems",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE58",
        "title": "Systems Analysis and Design",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE80A",
        "title": "Universal Access: Disability, Technology, and Society",
        "description": "Overview of human-centered technology and of its potential for increasing the quality of life and independence of disabled individuals. A substantial portion of the course is devoted to studying physical, psychological, and psychosocial aspects of disability. Topics include: diversity and integration, legislation, accessibility, and universal design. (Formerly Computer Engineering 80A.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Roberto Manduchi (manduchi)"
            ]
        }
    },
    {
        "code": "CSE80C",
        "title": "Starting a New Technology Company",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE80N",
        "title": "Introduction to Networking and the Internet",
        "description": "Introduction to the evolution, technological basis, and services of the Internet, with descriptions of its underlying communications structure, routing algorithms, peer-to-peer hierarchy, reliability, and packet switching. Network security, mail, multimedia and data compression issues, HTML, and digital images. Students who have completed CSE\u00a0150 cannot receive credit for this course. (Formerly Computer Engineering 80N.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Richard J Graziani (rgrazian)"
            ],
            "Winter": [
                "Richard J Graziani (rgrazian)"
            ],
            "Spring": [
                "Christina Parsa (cparsa)"
            ]
        }
    },
    {
        "code": "CSE80S",
        "title": "Social Networks",
        "description": "Introduction to social networks and game theory. Topics include the structure of social networks; the world wide web; the flow of information and behavior through networks; and the principles behind modern web search and search-ad placement. (Formerly Computer Science 17.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):MATH 3orMATH 11A; orAM 3orAM 6orAM 11Aor AM 15A; orAM 11Bor ECON 11A; or score on math placement exam of 300 or higher.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE100",
        "title": "Logic Design",
        "description": "Boolean algebra, logic minimization, finite-state machine design, sequential circuits, common logic elements, programmable logic devices, and an introduction to system level design. The electrical behavior of circuits including three state outputs, propagation delay, logic levels, and fanout.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 12; previous or concurrent enrollment inCSE 100Lis required.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Ethan Joseph Sifferman (esifferm)"
            ],
            "Winter": [
                "Dustin Richmond (durichmo)"
            ],
            "Spring": [
                "Dustin Alexander Richmond (durichmo)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE100L",
        "title": "Logic Design Laboratory",
        "description": "Laboratory sequence illustrating topics covered in course 100. Two 2-hour laboratory sessions per week. Weekly laboratory assignments which require the use of the oscilloscopes, TTL circuits, computer-aided design and simulation tools, and programmable logic.",
        "credits": "2",
        "prerequisites": "Prerequisite(s):CSE 12; previous or concurrent enrollment inCSE 100is required.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Ethan Joseph Sifferman (esifferm)"
            ],
            "Winter": [],
            "Spring": [
                "Dustin Alexander Richmond (durichmo)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE101",
        "title": "Introduction to Data Structures and Algorithms",
        "description": "Introduction to abstract data types and basics of algorithms. Linked lists, stacks, queues, hash tables, trees, heaps, and graphs will be covered. Students will also be taught how to derive big-Oh analysis of simple algorithms. All assignments will be in C/C++. (Formerly Computer Science 101 Algorithms and Abstract Data Types.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 12orBME 160; CSE 13E orECE 13orCSE 13S; andCSE 16; andCSE 30; andMATH 11BorMATH 19BorMATH 20BorAM 11Bor ECON 11B.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Yannis Demertzis (idemertz)",
                "Patrick Tantalo (ptantalo)"
            ],
            "Winter": [
                "Niloofar Montazeri (nimontaz)",
                "Patrick Tantalo (ptantalo)"
            ],
            "Spring": [
                "Ishtiyaque Ahmad (isahmad)",
                "Alex Pang (pang)"
            ]
        }
    },
    {
        "code": "CSE101M",
        "title": "Mathematical Thinking for Computer Science",
        "description": "Introduction to problem-solving and proof techniques for computer science: modeling CS problems using mathematical concepts; solving problems and inventing mathematical arguments; writing rigorous, understandable proofs using LaTeX. Applications in all CS areas with focus on analyzing algorithms, programs, and protocols.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [
            "Fall",
            "Winter"
        ],
        "instructors": {
            "Fall": [
                "Vaggos Chatziafratis (evchatzi)"
            ],
            "Winter": [
                "Daniel Fremont (dfremont)"
            ]
        }
    },
    {
        "code": "CSE101P",
        "title": "Introduction to Data Structures and Algorithms in Python",
        "description": "Introduction to abstract data types and basics of algorithms. Linked lists, stacks, queues, hash tables, trees, heaps, and graphs are covered. Students taught how to derive big-Oh analysis of simple algorithms. All assignments are in Python. Note thatCSE 101Passumes Python experience, students trained in a different language should self-study Python to prepare forCSE 101P. SeeCSE 20Testout Examfor resources and further information. Students cannot receive credit for this course andCSE 101. Students intending to complete the Computer Science B.S. should enroll in courseCSE 101.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 16; andCSE 20orCSE 20Test Out; andCSE 30; andMATH 11BorMATH 19BorMATH 20BorAM 11B. Enrollment is restricted to computer science and biolmolecular engineering and bioinformatics majors.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Niloofar Montazeri (nimontaz)"
            ]
        }
    },
    {
        "code": "CSE101",
        "title": "Algorithms and Abstract Data Types (Last Offered Fall '19)",
        "description": "Introduction to abstract data types and basics of algorithms. Linked lists, stacks, queues, hash tables, trees, heaps, and graphs will be covered. Students will also be taught how to derive big-Oh analysis of simple algorithms. All assignments will be in C/C++. (Formerly Computer Science 101 Algorithms and Abstract Data Types.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 12orBME 160; CSE 13E orECE 13orCSE 13S; andCSE 16; andCSE 30; andMATH 11BorMATH 19BorMATH 20BorAM 11Bor ECON 11B.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE102",
        "title": "Introduction to Analysis of Algorithms",
        "description": "Methods for the systematic construction and mathematical analysis of algorithms. Order notation, the RAM model of computation, lower bounds, and recurrence relations are covered. The algorithm design techniques include divide-and-conquer, branch and bound, and dynamic programming. Applications to combinatorial, graph, string, and geometric algorithms. (Formerly Computer  Science 102.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Bailey (ddbailey)"
            ],
            "Winter": [
                "Sungjin Im (sim9)"
            ],
            "Spring": [
                "Bailey (ddbailey)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE103",
        "title": "Computational Models",
        "description": "Various representations for regular languages, context-free grammars, normal forms, simple parsing, pumping lemmas, Turing machines, the Church-Turing thesis, intractable problems, the P-NP question. (Formerly CMPS 130.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Winter": [
                "Bailey (ddbailey)"
            ],
            "Spring": [
                "Daniel Fremont (dfremont)"
            ]
        }
    },
    {
        "code": "CSE104",
        "title": "Computability and Computational Complexity",
        "description": "Turing machines, general phase-structure grammars, the Chomsky hierarchy, recursive functions, diagonalization, the Halting problem, computability and unsolvability, computational complexity, time and space bounds, NP-completeness with emphasis on reductions between problems from various areas. (Formerly CMPS 132.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 103.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE105",
        "title": "Modern Algorithmic Toolbox",
        "description": "Undergraduate course on the modern algorithmic toolbox, meant for undergraduate students with a strong mathematical background. Students need familiarity with discrete math, analysis of algorithms, basic analysis, probability theory, and graph theory. Class is aimed at students who want to learn more about the central ideas and algorithmic techniques that are used in modern data science applications. Class focuses on the theoretical underpinnings of these algorithms as well as their practical applications and implementation details.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 102or equivalent or instructor consent. Students need a solid background in analysis of algorithms, discrete math, probability theory, graph theory, and overall mathematical maturity.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Vaggos Chatziafratis (evchatzi)"
            ]
        }
    },
    {
        "code": "CSE106",
        "title": "Applied Graph Theory and Algorithms",
        "description": "Basic concepts and algorithms are reviewed including trees, Eulerian and Hamiltonian graphs, and graph transversal. Algorithms are explored to solve problems in connectivity, routing, matching, and embedding of graphs. Graph theory and algorithms are developed around applications in computer engineering. (Formerly Computer Engineering 177.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE107",
        "title": "Probability and Statistics for Engineers (formerly Math Systems: Stochastic)",
        "description": "Introduction to fundamental tools of stochastic analysis. Probability, conditional probability; Bayes Theorem; random variables and transforms; independence; Bernnoulli trials. Statistics, inference from limited data; outcomes of repeated experiments; applications to design; assessment of relative frequency and probability; law of large numbers; precision of measurements. Elements of stochastic processes, Poisson processes; Markov chains. Students cannot receive credit for this course and Applied Mathematics and Statistics 131. (Formerly Computer Engineering 107.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 16; andAM 30orMATH 22orMATH 23A.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Patrick Tantalo (ptantalo)"
            ],
            "Winter": [
                "Patrick Tantalo (ptantalo)"
            ],
            "Spring": [
                "Patrick Tantalo (ptantalo)"
            ]
        }
    },
    {
        "code": "CSE108",
        "title": "Algorithmic Foundations of Cryptography",
        "description": "Focuses on some of the foundational aspects of modern cryptography, namely, private and public key cryptography, digital signatures, pseudorandom generators and functions, message authentication codes, hash functions, and random oracles. Course also connects the formal concepts with some real-world applications, like RA, SSL, and bitcoin, exposing students to general concepts of probability theory, number theory, and rigorous proofs. (Formerly Computer Science 118.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101. Enrollment restricted to computer engineering and computer science majors.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Yannis Demertzis (idemertz)"
            ]
        }
    },
    {
        "code": "CSE108C",
        "title": "Computing on Encrypted Data",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Ioannis Demertzis (idemertz)"
            ]
        }
    },
    {
        "code": "CSE109",
        "title": "Quantum Computing",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Alexandra Kolla (akolla)"
            ]
        }
    },
    {
        "code": "CSE110A",
        "title": "Fundamentals of Compiler Design I",
        "description": "An introduction to the basic techniques used in compiler design. Topics include compiler structure, symbol tables, regular expressions and languages, finite automata, lexical analysis, context-free languages, LL(1), recursive descent, LALR(1), and LR(1) parsing; and attribute grammars as a model of syntax-directed translation. Students use compiler building tools to construct a working compiler. (Formerly Computer  Science 104A.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 12andCSE 101.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": []
        }
    },
    {
        "code": "CSE110B",
        "title": "Fundamentals of Compiler Design II",
        "description": "Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, and machine-code generation. Students may not receive credit for this course and CSE\u00a0211. Taught in conjunction with CSE\u00a0211. (Formerly Computer Science 104B.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 110A.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE111",
        "title": "Advanced Programming",
        "description": "An introduction to object-oriented techniques of software development including data abstraction, inheritance, polymorphism, and object-oriented design. Extensive practice using a computer to solve problems, including construction of graphical user interfaces and a multithreaded client/server applications.",
        "credits": "5",
        "prerequisites": "Prerequisite(s): CSE 15 and CSE 15L; orCSE 13SandCMPM 35; or CSE 13E andCMPM 35; orECE 13andCMPM 35; orCSE 101.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Ethan Joseph Sifferman (esifferm)"
            ]
        }
    },
    {
        "code": "CSE112",
        "title": "Comparative Programming Languages",
        "description": "Covers several programming languages and compares styles, philosophy, and design principles. Principles underlying declarative, functional, and object-oriented programming styles are studied. Students write programs emphasizing each of these techniques. (Formerly Computer Science 112.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE113",
        "title": "Parallel Programming",
        "description": "Introduction to parallel and concurrent programming. Topics include: types of parallel computers and programming platforms; design, implementation, and optimization of programs for parallel and multicore processors; basic and advanced programming techniques; performance analysis and load balancing; and selected parallel algorithms.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 12andCSE 101.CSE 120recommended.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Mohsen Lesani (mlesani)"
            ]
        }
    },
    {
        "code": "CSE114A",
        "title": "Foundations of Programming Languages",
        "description": "Problem solving emphasizing recursion, data abstraction, and higher-order functions. Introduction to types and type checking, modular programming, and reasoning about program correctness. (Formerly CSE 116, Introduction to Functional Programming.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Owen Arden (oarden)"
            ],
            "Winter": [
                "Lindsey A Kuper (lkuper)",
                "Cormac A Flanagan (cormac)"
            ],
            "Spring": [
                "Lindsey Kuper (lkuper)"
            ]
        }
    },
    {
        "code": "CSE114B",
        "title": "Functional Programming",
        "description": "An in-depth study of the functional style of programming and functional abstraction, including the study of applicative functors and monads, and monadic parsers. (Formerly CSE 114.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 114A. Enrollment is restricted to junior and senior computer science majors.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE115A",
        "title": "Introduction to Software Engineering",
        "description": "Emphasizes the characteristics of well-engineered software systems. Topics include requirements analysis and specification, design, programming, verification and validation, maintenance, and project management. Practical and research methods are studied. Imparts an understanding of the steps used to effectively develop computer software. (Formerly Computer Science 115.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s): satisfaction of the Entry Level Writing and Composition requirements andCSE 101andCSE 130.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Fall": [
                "Richard K Jullig (rjullig)"
            ],
            "Winter": [
                "Richard K Jullig (rjullig)"
            ],
            "Spring": [
                "Richard K Jullig (rjullig)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE115B",
        "title": "Software Design Project",
        "description": "Students in teams specify, design, construct, test, and document a complete software system in a specialized application domain. Class time is spent in technical discussions and ongoing design reviews. A formal presentation and demonstration of each project is required. An organizational meeting will be held during the preceding quarter. Projects may be drawn from industry and campus research groups. (Formerly Computer Science 116.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 115A.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Richard K Jullig (rjullig)"
            ]
        }
    },
    {
        "code": "CSE115C",
        "title": "Software Design Project II",
        "description": "Continuation of CSE 116. Students work in teams to develop, test, document, and deploy a substantial software project. Teams give a formal presentation and demonstration of each project. (Formerly Computer Science 117.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 115B.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Richard K Jullig (rjullig)"
            ]
        }
    },
    {
        "code": "CSE115D",
        "title": "Software Design Project - Accelerated",
        "description": "Accelerated version ofCSE 115BandCSE 115C. Students work in teams to develop, test, document and deploy a substantial software project. Each team gives a formal presentation and demonstration of their project. Students cannot receive credit for bothCSE 115Dand any part of the 115B-115C sequence.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 115A.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Richard K Jullig (rjullig)"
            ]
        }
    },
    {
        "code": "CSE117",
        "title": "Open Source Programming",
        "description": "Teaches the principles of open source software development. By participating in diverse projects, students experience the process of developing software in a distributed, community-centric environment. Students learn about the tools, processes, and soft skills that are essential in this context.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101; andCSE 102orCSE 111orCSE 115A. Enrollment restricted to School of Engineering majors.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE118",
        "title": "Mobile Applications",
        "description": "Introduces the tools and techniques required to develop the sophisticated interactive mobile applications we use daily on our Android and iOS devices. Native (specific to Android or iOS devices) and cross-platform (designed to work on both Android and iOS) development is undertaken with deployment to device emulators and, optionally, personal devices. Ownership of an Android or iOS device is not required and confers no advantage. (Formerly CMPS 121.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101. Enrollment is restricted to juniors and seniors.",
        "quarters_offered": [
            "Summer"
        ],
        "instructors": {
            "Summer": []
        }
    },
    {
        "code": "CSE119",
        "title": "Software for Society",
        "description": "Provides experience with applying computing to social issues. Case studies on multiple issues. For example: privacy, copyright, voting, education, poverty, energy, activism. Team project in which students develop software to address a pre-identified need of a global or local non-profit. (Formerly Computer Science 119.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE120",
        "title": "Computer Architecture",
        "description": "Introduction to computer architecture including examples of current approaches and the effect of technology and software. Computer performance evaluation, basic combinatorial and sequential digital components, different instruction set architectures with a focus on the MIPS ISA and RISC paradigm. Evolution of CPU microarchitecture from single-cycle to multi-cycle pipelines, with overview of super-scalar, multiple-issue and VLIW. Memory system, cache, virtual memory and relationship between memory and performance. Evolution of PC system architecture. May include advanced topics, such as parallel processing, MIMD, and SIMD.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 12; and CSE 13E, orCSE 13S, orECE 13, or CSE 15 and CSE 15L.CSE 16recommended.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Sagnik Nath (sanath)"
            ],
            "Winter": [
                "Heiner Litz (hlitz)",
                "Abel Souza (absouza)"
            ],
            "Spring": [
                "Yuanchao Xu (yxu314)",
                "Sagnik Nath (sanath)"
            ]
        }
    },
    {
        "code": "CSE121",
        "title": "Embedded System Design",
        "description": "The design and use of microprocessor-based embedded systems. Covers microprocessor and microcontroller architecture, programming techniques, bus and memory organization, DMA, timing issues, interrupts, peripheral devices, serial and parallel communication, and interfacing to analog and digital systems. (Formerly Microprocessor System Design, and formerly offered as two courses, CMPE 121 and CMPE 121L.)",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 12,CSE 100,CSE 100L; and CSE 13E orCSE 13SorECE 13or CSE 15 and CSE 15L; andECE 101,ECE 101L,PHYS 5CandPHYS 5N.",
        "quarters_offered": [
            "Fall",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Ethan Joseph Sifferman (esifferm)"
            ],
            "Spring": [
                "Ethan Joseph Sifferman (esifferm)"
            ]
        }
    },
    {
        "code": "CSE122",
        "title": "Introduction to VLSI Digital System Design",
        "description": "Introduces very large scale integrated (VLSI) custom integrated circuits. Topics include: semiconductor manufacturing, logic families, field-effect transistors (FETs), interconnect models, simulation, and circuits. Introduces the design flow from logic design to layout with a focus on high performance and low power. Students cannot receive credit for this course andCSE 222A. (Formerly Computer Engineering 122.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 100,CSE 100L,ECE 101, andECE 101L.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Matthew Guthaus (mrg)"
            ]
        }
    },
    {
        "code": "CSE123A",
        "title": "Engineering Design Project I",
        "description": "First of a two-course sequence that is the culmination of the engineering program. Students apply knowledge and skills gained in elective track to complete a major design project. Students complete research, specification, planning, and procurement for a substantial project. Includes technical discussions, design reviews, and formal presentations; engineering design cycle, engineering teams, and professional practices. Formal technical specification of the approved project is presented to faculty.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 121; previous or concurrent enrollment inCSE 185E.",
        "quarters_offered": [
            "Fall",
            "Winter"
        ],
        "instructors": {
            "Fall": [
                "Marcelo Siero (msiero2)"
            ],
            "Winter": [
                "David Harrison (dcharris)"
            ]
        }
    },
    {
        "code": "CSE123B",
        "title": "Engineering Design Project II",
        "description": "Second of two-course sequence in engineering system design. Students fully implement and test system designed and specified inCSE 123A. Formal written report, oral presentation, and demonstration of successful project to review panel of engineering faculty required.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 123A, andCSE 185Eor CSE 185S.",
        "quarters_offered": [
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Winter": [
                "Marcelo Siero (msiero2)"
            ],
            "Spring": [
                "David Harrison (dcharris)"
            ]
        }
    },
    {
        "code": "CSE125",
        "title": "Logic Design with Verilog",
        "description": "Verilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. May be taught in conjunction withCSE 225. Students cannot receive credit for both courses.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 100andCSE 100LandCSE 120.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Dustin Richmond (durichmo)"
            ]
        }
    },
    {
        "code": "CSE129A",
        "title": "Capstone Project I",
        "description": "First of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this first course, students complete the specification and planning for a substantial project. Topics covered: engineering design cycle, engineering teams, and professional practices. (Formerly Computer Engineering 129A.)",
        "credits": "2",
        "prerequisites": "Prerequisite(s): previous or concurrent enrollment in coursesCSE 121and CSE 121L. Enrollment is restricted to bioengineering, biomolecular engineering and bioinformatics, computer engineering, and robotics engineering majors.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE129B",
        "title": "Capstone Project II",
        "description": "Second of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this second course, students complete the research and procurement for a substantial project and a preliminary implementation. Prerequisite(s):CSE 121, CSE 121L, andCSE 129A. Previous or concurrent enrollment in CSE 185. Enrollment by permission of instructor.",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE129C",
        "title": "Capstone Project III",
        "description": "Third of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this third course, students work in teams to complete the project specified and advanced in the first two courses. A formal written report, oral presentation, and demonstration of the successful project to a review panel of engineering faculty is required. Prerequisite(s):CSE 129Band CSE 185. Enrollment by permission of instructor.",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE130",
        "title": "Principles of Computer Systems Design",
        "description": "Covers the principles governing computer-systems design and complexity; familiarity with memory, storage, and networking; concurrency and synchronization; layering (abstraction and modularity); naming; client-server and virtualized system models; and performance. Requires significant programming projects demonstrating mastery of these concepts.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 12; andCSE 101, or CSE 15 and CSE 15L; and knowledge of C programming language.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Yuanchao Xu (yxu314)",
                "Kerry Veenstra (veenstra)"
            ],
            "Winter": [
                "Andrew Quinn (aquinn1)",
                "Kerry Veenstra (veenstra)"
            ],
            "Spring": [
                "Kriti Bhargava (kbharga1)",
                "Kerry Veenstra (veenstra)"
            ]
        }
    },
    {
        "code": "CSE132",
        "title": "Computer Security",
        "description": "Introduction to computer security (including selected topics in network security). Access control. Security in programming languages. Basic cryptography. Security protocols. (Formerly CMPS 122.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 130or CSE 131 or permission of instructor. Enrollment restricted to School of Engineering majors.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Cardenas (alacarde)"
            ]
        }
    },
    {
        "code": "CSE134",
        "title": "Embedded Operating Systems",
        "description": "Detailed exploration of the internal design of an embedded operating systems kernel. Covers kernel structure and organization, device drivers, I/O systems, file systems, memory management, and security. Students complete significant programming projects that extend or modify existing operating systems. (Formerly Computer Engineering 114.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 120andCSE 130.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Liting Hu (lhu82)"
            ]
        }
    },
    {
        "code": "CSE138",
        "title": "Distributed Systems",
        "description": "Covers topics in distributed computing including communication, naming, synchronization, consistency and replication, fault tolerance, and security. Examples drawn from peer-to-peer systems, online gaming, the World Wide Web; other systems also used to illustrate approaches to these topics. Students implement simple distributed systems over the course of the quarter. (Formerly CMPS 128, Distributed Systems: File Sharing, Online Gaming, and More.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 130or CSE 131.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Liting Hu (lhu82)"
            ],
            "Winter": [
                "Peter A Alvaro (palvaro)"
            ],
            "Spring": [
                "Peter Alvaro (palvaro)"
            ]
        }
    },
    {
        "code": "CSE140",
        "title": "Artificial Intelligence",
        "description": "Introduction to the contemporary concepts and techniques of artificial intelligence, including any or all of: machine perception and inference, machine learning, optimization problems, computational methods and models of search, game playing and theorem proving. Emphasis may be on any formal method of perceiving, learning, reasoning, and problem solving which proves to be effective. This includes both symbolic and neural network approaches to artificial intelligence. Issues discussed include symbolic versus nonsymbolic methods, local versus global methods, hierarchical organization and control, and brain modeling versus engineering approaches. Lisp or Prolog may be introduced. Involves one major project or regular programming assignments.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101; andCSE 40orSTAT 132.",
        "quarters_offered": [
            "Fall",
            "Winter"
        ],
        "instructors": {
            "Fall": [
                "Niloofar Montazeri (nimontaz)"
            ],
            "Winter": [
                "Niloofar Montazeri (nimontaz)"
            ]
        }
    },
    {
        "code": "CSE142",
        "title": "Machine Learning and Data Mining",
        "description": "Introduction to machine learning algorithms and their applications. Topics include classification learning, density estimation and Bayesian learning regression, and online learning. Provides introduction to standard learning methods such as neural networks, decision trees, boosting, and nearest neighbor techniques.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 40orSTAT 132; andCSE 101; andAM 30, orMATH 22, orMATH 23A; andSTAT 131orCSE 107.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Alex Rudnick (ajrudnic)"
            ]
        }
    },
    {
        "code": "CSE143",
        "title": "Introduction to Natural Language Processing",
        "description": "Introduces the theory and practice of natural language processing (NLP)--the creation of computer programs that can understand, generate, and learn natural language. Introduces the three major subfields of NLP: syntax (the structure of a sentence); semantics (the  explicit meaning of a single sentence); and pragmatics (the implicit meaning of a sentence when it is used in a specific discourse). Projects focus on the techniques useful for a particular application area, alternating in different years. Project application areas include information extraction, narrative understanding, sentiment analysis, dialogue systems, and question answering. (Formerly CMPS 143.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101, andCSE 107orSTAT 131; andCSE 40. Python competence equivalent toCSE 30is highly recommended.",
        "quarters_offered": [
            "Fall",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Alex Rudnick (ajrudnic)"
            ],
            "Spring": [
                "Jeffrey Flanigan (jmflanig)"
            ]
        }
    },
    {
        "code": "CSE144",
        "title": "Applied Machine Learning: Deep Learning",
        "description": "Provides a practical and project-oriented introduction to deep learning techniques. Starts with a review of basic elements of machine learning: training and testing, loss function, gradient descent, linear regression, and logistic regression. Moves on to common deep learning models: feedforward networks, convolutional networks for image recognition, recurrent networks and LSTM for temporal and sequential data, attention models and transformers. Some practical concepts for deep learning, including how to find model parameters, how to train large scale models, techniques for regularization and avoid overfitting, are also covered. A very basic introduction to more complex techniques such as deep reinforcement learning, neural symbolic models and diffusion models is provided in week 9. Selected student teams present their course projects in the last week. (Formerly offered as Applied Machine Learning.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 40orSTAT 132; andCSE 101. Enrollment is restricted to juniors and seniors.",
        "quarters_offered": [
            "Fall",
            "Winter"
        ],
        "instructors": {
            "Fall": [
                "Yi Zhang (yiz)"
            ],
            "Winter": [
                "Cihang Xie (cixie)"
            ]
        }
    },
    {
        "code": "CSE145",
        "title": "Introduction to Data Mining",
        "description": "Covers the techniques, algorithms, and applications of data mining, including data preprocessing, data exploration, classification, clustering, mining text, and sequential and social data. (Formerly TIM 145.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s): CSE 15 and CSE 15L orCSE 30orCSE 13S; andAM 30orMATH 22orMATH 23A; andSTAT 5orCSE 107orSTAT 131; andAM 10orMATH 21; andCSE 16orECON 113. Enrollment restricted to juniors and seniors. Graduate students by permission of instructor.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE146",
        "title": "Ethics & Algorithms",
        "description": "Provides an introduction to data-driven and algorithmic decision making, and ethical frameworks for evaluating automated systems. Emphasis on algorithmic literacy, critical analysis, and fundamental limitations of automated decision making. Covers concepts including predictive and causal modeling. Discusses bias, fairness, interpretability, privacy, and accountability. Finally, discusses notions of autonomy and algorithmic auditing.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101; andCSE 107orSTAT 131; andCSE 40.CSE 142andCSE 140are recommended.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Yang Liu (yangliu)"
            ]
        }
    },
    {
        "code": "CSE150",
        "title": "Introduction to Computer Networks",
        "description": "Addresses issues arising in organizing communications among autonomous computers. Network models and conceptual layers; Internet-working; characteristics of transmission media; switching techniques (packet switching, circuit switching, cell switching); medium access control (MAC) protocols and local area networks; error-control strategies and link-level protocols; routing algorithms for bridges and routers; congestion control mechanisms; transport protocols; application of concepts to practical wireless and wireline networks and standard protocol architectures. Lab component provides students with hands-on experience in computer networks. Students who have completedCSE 80Ncan take this course for credit.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 16andCSE 12; andCSE 30, or CSE 15 and CSE 15L.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Christina Parsa (cparsa)"
            ],
            "Winter": [
                "Christina Parsa (cparsa)"
            ],
            "Spring": [
                "Chen Qian (cqian12)"
            ]
        }
    },
    {
        "code": "CSE151",
        "title": "Advanced Computer Networks (formerly Network Administration)",
        "description": "Provides an in-depth coverage of fundamental topics introduced in course 150 including routing, transport, and internetworking. Also introduces advanced concepts not covered inCSE 150including wireless, application-layer services, security, etc. (Formerly  Computer Engineering 151.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 150. Concurrent enrollment inCSE 151Lis required.",
        "quarters_offered": [
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Spring": [
                "Richard J Graziani (rgrazian)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE151L",
        "title": "Advanced Computer Networks Laboratory",
        "description": "Laboratory illustrating the concepts covered inCSE 151: provides students with hands-on experience in computer networks. (Formerly Computer Engineering 151L.)",
        "credits": "2",
        "prerequisites": "Prerequisite(s):CSE 150. Concurrent enrollment inCSE 151is required.",
        "quarters_offered": [
            "Spring",
            "Summer"
        ],
        "instructors": {
            "Spring": [
                "Richard J Graziani (rgrazian)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE152",
        "title": "Principles of Computer Communication",
        "description": "Course focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course andCSE 250B.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 107,CSE 150, and CSE 150L.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE153",
        "title": "Network Security and Privacy",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Ram Sundara Raman (rsundar2)"
            ]
        }
    },
    {
        "code": "CSE156",
        "title": "Network Programming",
        "description": "Methods and tools used for network programming. Topics include: operating system (OS) support for network protocols; inter-process communication (IPC) facilities, such as pipes, sockets, and remote procedure call (RPC); design of client and server sides of network applications; network security; and programming projects. (Formerly Computer Engineering 156.)",
        "credits": "5",
        "prerequisites": ",Prerequisites:CSE 150andCSE 101. Concurrent enrollment in courseCSE 156Lis required.",
        "quarters_offered": [
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Winter": [
                "Mehrdad Parsa (meparsa)"
            ],
            "Spring": [
                "Ram Sundara Raman (rsundar2)"
            ]
        }
    },
    {
        "code": "CSE156L",
        "title": "Network Programming Laboratory",
        "description": "Laboratory sequence illustrating concepts taught inCSE 156. Students learn use of network programming tools and methods via programming exercises. (Formerly Computer Engineering 156L.)",
        "credits": "2",
        "prerequisites": "Prerequisites:CSE 150andCSE 101. Concurrent enrollment inCSE 156is required.",
        "quarters_offered": [
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Winter": [
                "Mehrdad Parsa (meparsa)"
            ],
            "Spring": [
                "Ram Sundara Raman (rsundar2)"
            ]
        }
    },
    {
        "code": "CSE157",
        "title": "Internet of Things",
        "description": "Introduces the key concepts and techniques in the design of Internet of Things (IoT). Topics include dominant architectures and protocols for IoT, wireless infrastructure for IoT, hardware and software development methodologies, embedded software design for IoT, cloud software for IoT, and network and system security. Students work in teams on a project to design, prototype, and test a complete IoT system.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 121andCSE 150.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Katia Obraczka (obraczka)"
            ]
        }
    },
    {
        "code": "CSE160",
        "title": "Introduction to Computer Graphics",
        "description": "Introduces techniques of modeling, transformation, and rendering for computer-generated imagery. Topics: 2D/3D primitives, projections, matrix composition, and shading algorithms. Programming assignments and major project required. Students cannot receive credit for both this course andCSE 260in quarters when they are offered concurrently. Mastery of materials in the prerequisite courses will be verified with a quiz or assignment during the first two weeks of the course. Lab component will help with gaining additional competence with a number of important software development tools, graphics libraries, and graphical user interfaces. Topics include OpenGL, WebGL, rubberbanding, picking, sliders, buttons, dialog, event handling, double buffering, lighting, shading, materials, and textures. The topic list may be updated to reflect technological changes. (Formerly Computer Science 160.)",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 101andMATH 21orAM 10.",
        "quarters_offered": [
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Winter": [
                "James E Davis (davisje)"
            ],
            "Spring": [
                "James E Davis (davisje)"
            ]
        }
    },
    {
        "code": "CSE160L",
        "title": "Introduction to Computer Graphics Laboratory",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE161",
        "title": "Introduction to Data Visualization",
        "description": "Concepts and methods for data analysis, information and scientific visualization, and effective communication of technical data. Topics include: mathematical foundations; scalar, vector, and tensor field visualization; multivariate visualization; and tree and graph visualizations. Applications are drawn from social-network analysis; environmental and space science; and medical imaging. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 161.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 160or equivalent. Concurrent enrollment inCSE 161Lis required.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE161L",
        "title": "Data Visualization Lab",
        "description": "ComplementsCSE 161. Students gain additional competence with a number of important software development tools and techniques. Included are Paraview,  Visualization Toolkit (VTK), and Insight Toolkit (ITK). Students get hands-on experience with designing transfer functions, isosurfacing, direct volume rendering, vector-field visualization techniques, as well as methods for dealing with non-spatial data. (Formerly CMPS 161L.)",
        "credits": "2",
        "prerequisites": "Concurrent enrollment inCSE 161is required.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE162",
        "title": "Advanced Computer Graphics and Animation",
        "description": "Covers concepts and methods for modeling and rendering static and dynamic scenes Topics include: mathematical foundations (e.g., splines and numerical integration; global illumination models; texture mapping; morphing; physically based animation; behavioral animations; and procedural animations. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 162.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 160or equivalent. Concurrent enrollment inCSE 162Lis required.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE162L",
        "title": "Advanced Computer Graphics and Animation Lab",
        "description": "Complements CSE\u00a0162. Students gain additional competence in a hands-on computational laboratory setting. Representative examples include topics, such as interactive curve and surface design; shaders for advanced effects; crowd and behavioral animation; experiments with particle systems; facial animation; and motion and planning. (Formerly CMPS 162L.)",
        "credits": "2",
        "prerequisites": "Prerequisite(s): concurrent enrollment inCSE 162is required.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE163",
        "title": "Data Programming for Visualization",
        "description": "Presents the basics of open-source programming tools to perform data analysis and create interactive visualizations and maps for the web, data integrity and scraping, statistical computation, simple and novel visualizations, and geomapping. The examples are drawn from social science, public policy, and data journalism. (Formerly CMPS 165.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE164",
        "title": "Computer Vision",
        "description": "Introduces both the basic computer vision concepts and the advanced deep learning methods for computer vision. Topics include fundamentals of image formation, camera imaging geometry, early-/mid-/high-level vision, basics of machine learning and convolutional neural networks for vision.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 144.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Cihang Xie (cixie)"
            ]
        }
    },
    {
        "code": "CSE165",
        "title": "Human-Computer Interaction",
        "description": "Theory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Interdisciplinary course for social science and engineering majors. Students cannot receive credit for this course andCSE 265or DANM 231. (Formerly Computer Engineering 131.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s): CSE 15.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE166A",
        "title": "Game Theory and Applications I",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE166B",
        "title": "Game Theory and Applications II",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE167",
        "title": "Mobile Sensing and Interaction",
        "description": "Provides hands-on knowledge and experience with modern mobile computing platforms for sensing and interactions tasks. Students learn how to create usable applications on a sensor-laden, mobile computing platform with adequate level of user interface.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 13S; or CSE 13E orECE 13; or CSE 15 and CSE 15L; andPHYS 5AorPHYS 6A; andAM 10orMATH 21.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE168",
        "title": "Introduction to Augmented Reality and Virtual Reality",
        "description": "Covers the concepts and methods needed to develop augmented reality (AR) and virtual reality (VR) applications. Topics include 3D modeling, graphics rendering, image compositing, occlusion handling, sensors, computer vision and image analysis, toolkits for AR, different display options, dynamics, interaction, and navigation.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 160. Some knowledge of mobile platforms (e.g.,CSE 118orCSE 167) is helpful, but not required.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE170",
        "title": "Management of Technology Seminar",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE171A",
        "title": "Management of Technology I",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE172B",
        "title": "Management of Technology II",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE173",
        "title": "Financial Engineering & Management in High Technology Firms",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE174",
        "title": "Decision Analysis in Management",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE175",
        "title": "Business Strategy and Information Systems",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE180",
        "title": "Database Systems I",
        "description": "Introduction to the concepts, approaches, tools, and methodology of database design. Covers the entity-relationship model, the relational model, relational algebra, relational calculus, commercial languages (such as SQL and QBE), functional dependencies, normal forms, and design theory. Other topics may include knowledge-bases, constraint databases, and alternative database models. Students that have taken and passedCSE 182may not takeCSE 180for credit. (Formerly CMPS 180.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Ishtiyaque Ahmad (isahmad)"
            ]
        }
    },
    {
        "code": "CSE181",
        "title": "Database Systems II",
        "description": "Introduction to the architecture and implementation of database systems. Topics covered include data storage, tree and hash indexes, storage management, query evaluation and optimization, transaction management, concurrency control, recovery, and XML data management.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 180andCSE 130.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE182",
        "title": "Introduction to Database Management Systems",
        "description": "Concepts, approaches, tools, and methodology of database design and utilization. Topics include the relational data model; modeling relationships between entities; dependencies and normal forms; commercial data management languages such as SQL (defining SQL data, SQL queries and modifications, views, indexes, constraints, and triggers); transactions; stored procedures and functions; access to databases from a programming language (Python); relational algebra; query execution plans; and non-relational data models such as JSON and XML. Involves database application development projects. Students that have taken and passedCSE 180cannot receive credit forCSE 182.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 16orBME 160; andCSE 30. Course restricted to juniors and seniors and intended for non-majors; computer science majors should enroll inCSE 180.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Nikolaos Tziavelis (ntziavel)"
            ]
        }
    },
    {
        "code": "CSE183",
        "title": "Web Applications",
        "description": "The World-Wide Web is one of the main mechanisms by which computer applications are delivered to users. This course introduces the design of Web applications. Students learn the main technologies involved, and build web applications as part of homework assignments and group class projects. Students cannot receive credit for this course andCSE 186.",
        "credits": "5",
        "prerequisites": "Prerequisite(s): CSE 15 and CSE 15L, orCMPM 35, orCSE 101.",
        "quarters_offered": [
            "Fall",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Luca de Alfaro (luca)"
            ],
            "Spring": [
                "Massimo Di Pierro (madipier)"
            ]
        }
    },
    {
        "code": "CSE184",
        "title": "Data Wrangling and Web Scraping",
        "description": "Python basics; data extraction from CSV, JSON, XML, Excel, PDF, encoded text files; data cleaning, finding duplicates, missing data, fuzzy matching; data exploration, joining, aggregating, separating, correlation, clustering; web scraping, APIs, scraping data from social media, open data network. (Formerly CMPS 184.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE185E",
        "title": "Technical Writing for Computer Science and Engineering",
        "description": "Cross Listed Courses",
        "credits": "5",
        "prerequisites": "Prerequisite(s): satisfaction of Entry Level Writing and Composition requirements; andCSE 12or CSE 15 orCSE 30orBME 160or by permission of the instructor. Enrollment is restricted to computer engineering, bioengineering, bioinformatics, biomolecular engineering and bioinformatics, or network and digital technology majors.",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Gerald B Moulds (gmoulds)"
            ],
            "Winter": [
                "Gerald B Moulds (gmoulds)"
            ],
            "Spring": [
                "Gerald B Moulds (gmoulds)"
            ]
        }
    },
    {
        "code": "CSE185S",
        "title": "Technical Writing and Communication in Computer Science",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Gerald B Moulds (gmoulds)"
            ],
            "Winter": [
                "Gerald B Moulds (gmoulds)"
            ],
            "Spring": [
                "Gerald B Moulds (gmoulds)"
            ]
        }
    },
    {
        "code": "CSE186",
        "title": "Full Stack Web Development I",
        "description": "Examines current uses of the World Wide Web for delivery of the sophisticated interactive applications used daily. Web applications offer several advantages over traditional, locally installable binaries including heterogeneous deployment, instantaneous access, continuous updates, and the possibility of collaboration at scale. These full stack web applications are typically more complex than their traditional counterparts, requiring the seamless integrating of numerous related technologies if end users are to have a productive experience and the system is to remain robust, performant, and secure. Students cannot receive credit for this course andCSE 183.",
        "credits": "5",
        "prerequisites": "Prerequisite(s): CSE 15 and CSE 15L, orCSE 30, orCSE 101. Enrollment is restricted to juniors and seniors majoring in computer engineering, computer science, and computer game design.",
        "quarters_offered": [
            "Winter",
            "Summer"
        ],
        "instructors": {
            "Winter": [
                "David Harrison (dcharris)"
            ],
            "Summer": []
        }
    },
    {
        "code": "CSE187",
        "title": "Full Stack Web Development II",
        "description": "Continues the examination of current uses of the World Wide Web for delivery of the sophisticated interactive applications we use daily. Advanced development techniques are examined with continued emphasis on automated testing. A sizable team project is undertaken to introduce topics including, but not limited to, automated build pipelines, penetration testing, API versioning, and deployment at scale.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 186. Enrollment is restricted to juniors and seniors.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "David Harrison (dcharris)"
            ]
        }
    },
    {
        "code": "CSE191",
        "title": "Computer Science and Technology Seminar",
        "description": "Weekly talks by industry experts, university researchers, field practitioners, and video presentations provide an in-depth exposure to a specific or a broad area of computer science and technology. Topics include emerging ideas, opportunities, challenges, and future of the industry. (Formerly CMPS 191.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE200",
        "title": "Research and Teaching in Computer Science and Engineering",
        "description": "Basic teaching techniques for teaching assistants, including responsibilities and rights of teaching assistants, resource materials, computer security, leading discussion or lab sessions, presentation techniques, maintaining class records, electronic handling of homework, and grading. The course examines research and professional training, including use of the library and online databases, technical typesetting, writing journal and conference papers, publishing in computer science and computer engineering, giving talks in seminars and conferences, and ethical issues in science and engineering. Required for all teaching assistants. Formerly CMPS 200 and CMPE 200.)",
        "credits": "3",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Harikrishna S Kuttivelil (hkuttive)"
            ]
        }
    },
    {
        "code": "CSE201",
        "title": "Analysis of Algorithms",
        "description": "Rigorous analysis of the time and space requirements of important algorithms, including worst case, average case, and amortized analysis. Techniques include order-notation, recurrence relations, information-theoretic lower bounds, adversary arguments. Analysis of the key data structures: trees, hash tables, balanced tree schemes, priority queues, Fibonacci and binomial heaps. Algorithmic paradigms such as divide and conquer, dynamic programming, union-find with path compression, augmenting paths. Selected advanced algorithms. Introduction to NP-completeness. (Formerly Computer Science 201.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduate students may enroll in this course if they have completedCSE 102orCSE 106and have the consent of the instructor.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Seshadhri Comandur (sesh)"
            ]
        }
    },
    {
        "code": "CSE202",
        "title": "Combinatorial Algorithms",
        "description": "Fundamental combinatorial algorithms, graph algorithms, flow problems, matching problems, linear programming, integer programming, NP-completeness, approximation algorithms for optimization problems. (Formerly Computer Science 211.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE204",
        "title": "Computational Models and Complexity",
        "description": "Finite automata and regular expressions, universal models of computation, computability and unsolvability, relations between complexity classes, hierarchy theorems, reductions, complete problems for the major complexity classes (L, NL,  P, NP, PSPACE). Other topics may include complexity of counting and enumeration problems, complexity of approximation, randomized complexity classes. (Formerly Computer Science 210.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE205",
        "title": "Logic in Computer Science",
        "description": "The applications and uses of formal systems to computer science. Covers the syntax and semantics of propositional logic and first-order logic, normal forms, soundness and completeness theorems, Herbrand's theorem, unification and resolution, foundations of logic programming, automated theorem proving. Other topics may include deductive databases, database query languages, nonmonotonic reasoning. (Formerly Computer Science 217.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE206C",
        "title": "Foundations of Modern Cryptography",
        "description": "Focuses on foundational aspects of modern cryptography, namely, private and public key cryptography; digital signatures; pseudorandom generators and functions/permutations; message authentication codes; hash functions; and random oracles, certificates and public-key infrastructures. Also connects the formal concepts with real-world applications. Students are exposed to general concepts of probability theory, number theory, and rigorous proofs. Assumes background on proofs, discrete probability, and modular arithmetic as well as programming in C/C++ or Python. Prerequisite(s):CSE 201is recommended. Enrollment is restricted to graduate students and requires instructor permission.",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Yannis Demertzis (idemertz)"
            ]
        }
    },
    {
        "code": "CSE207",
        "title": "Graph Algorithms",
        "description": "Explores graph theory and algorithms for solving problems in engineering. A review of basic graph concepts and algorithms is followed by topics in network flow, partitioning, spectral analysis of graphs, graph isomorphism, and intractability. (Formerly Computer Engineering 277.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 101andCSE 102; orCSE 106; orCSE 201; or equivalent. Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE208",
        "title": "Introduction to Information Theory",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE209",
        "title": "Evolutionary Game Theory",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE209A",
        "title": "Modern Algorithmic Toolbox",
        "description": "Graduate course on the modern algorithmic toolbox, meant for graduate students with a good mathematical background. Students need familiarity with discrete math, analysis of algorithms, basic analysis, probability theory, and graph theory. Class is aimed at students who want to learn more about the central ideas and algorithmic techniques that are used in modern data science applications. Class focuses on the theoretical underpinnings of these algorithms as well as their practical applications and implementation details.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201or equivalent or instructor consent. Students need a solid background in analysis of algorithms, discrete math, probability theory, graph theory, and overall mathematical maturity. Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Vaggos Chatziafratis (evchatzi)"
            ]
        }
    },
    {
        "code": "CSE210A",
        "title": "Programming Languages",
        "description": "Covers current issues in programming languages. Language topics include object oriented, concurrent, functional, and logic programming, and other programmable applications such as symbolic manipulators and simulation. (Formerly Computer Science 203.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduate students may enroll for this course if they have completedCSE 112and have the consent of the instructor.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Owen Arden (oarden)"
            ]
        }
    },
    {
        "code": "CSE210B",
        "title": "Advanced Programming Languages",
        "description": "Covers issues in the design, implementation, analysis, and specification of programming languages.  Topics include formal semantics (including operational, axiomatic, and denotational semantics), advanced type systems, program analysis (including abstract interpretation and model checking), specification, and verification. (Formerly Computer Science 253.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 210Aor equivalent.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE211",
        "title": "Compiler Design",
        "description": "Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, machine code generation. Students may not receive credit for this course andCSE 110B. Taught in conjunction withCSE 110B. (Formerly Computer Science 204.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE212A",
        "title": "Software Engineering",
        "description": "Introduction to the general principles of software engineering. Covers current and classical topics from both practical and theoretical viewpoints. Topics include software evolution, project management, software inspections, design methods, requirements analysis and specification, software testing, maintenance, software implementation, human interfaces, and software engineering experimentation. (Formerly CMPS 276.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduates may enroll in this course if they have completedCSE 115A.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE212B",
        "title": "Software Reuse and Component-Based Software Engineering",
        "description": "Detailed study of interlocking business, organizational, and technical issues in large-scale software reuse and component-based software engineering. Topics include architecture, design for reuse, domain engineering, model-driven development, domain-specific kits, components, frameworks, software agents, generators, problem-oriented languages, library design, reuse tools, patterns, and aspects. Assumes prior exposure to software engineering topics. (Formerly Computer Science 279.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 212Aor consent of instructor. Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE214",
        "title": "Principles of Database Systems",
        "description": "Advanced course on principles of database systems. Main topics include overview of the relational data model and relational query languages; recursive queries, datalog, and fixed-points; query processing and optimization; database design, dependencies, normal forms, and the chase procedure. Additional topics may include information integration, complex objects, semistructured data, and XML. (Formerly Computer Science 277.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201or equivalent or consent of instructor. Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Nikos Tziavelis (ntziavel)"
            ]
        }
    },
    {
        "code": "CSE215",
        "title": "Design and Implementation of Database Systems",
        "description": "Advanced course in implementation techniques for database systems. For students who wish to do research in databases or to learn more about large-scale data processing. Topics include: indexing of complex data; techniques for high-volume concurrency control; query processing and optimization; database recovery; parallel database system architectures; database systems for streaming data; approximate query answering. Additional topics may include: self-managing database systems; advanced query optimization techniques; and query processing techniques for semi-structured data.",
        "credits": "5",
        "prerequisites": "Prerequisite(s): Enrollment is restricted to graduate students. Undergraduates that have takenCSE 181may enroll. A basic knowledge of databases, similar to the content ofCSE 180, is recommended.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE216",
        "title": "Formal Methods",
        "description": "Mathematical techniques for analyzing systems to prove rigorous guarantees about their behavior. Fundamental algorithms for and advanced topics in modeling, specification, verification, correct-by-construction synthesis, and testing. Applications to hardware/software design, cybersecurity, robotics, machine learning. Course includes a final project.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 103or equivalent recommended, but not required. Enrollment is restricted to graduate students; undergraduates may enroll by permission of instructor.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Daniel Fremont (dfremont)"
            ]
        }
    },
    {
        "code": "CSE220",
        "title": "Computer Architecture",
        "description": "Provides a thorough and fundamental treatment of the art of computer architecture. Topics include concepts of von Neumann architectures, methods of evaluating CPU performance, instruction-set design and examples, compiler issues, instruction pipelining, superscalar processors, methods for reduction of branch penalty, memory hierarchies, I/O systems, floating-point arithmetic, and current issues in parallel processing. (Formerly CMPE 202.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduates may enroll if they have completedCSE 120and with consent of instructor. A basic knowledge of computer architecture, similar to the content ofCSE 120, is recommended.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Heiner Litz (hlitz)"
            ]
        }
    },
    {
        "code": "CSE221",
        "title": "Advanced Microprocessor Design",
        "description": "Introduction to latest advances in computer architecture. Focuses on processor core design. Topics include simultaneous multithreading, thread level speculation, trace caches, novel out-of-order mechanisms, and energy-efficient processor core designs. Final project is modification/enhancement of an out-of-order processor on an FPGA development system. (Formerly Computer Engineering 221.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 220; andCSE 125,CSE 225, or equivalent Verilog experience. Concurrent enrollment inCSE 221Lis required. Enrollment restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE221L",
        "title": "Advanced Microprocessor Design Laboratory",
        "description": "Laboratory sequence illustrating topics covered in course 221. (Formerly Computer Engineering 221L.)",
        "credits": "3",
        "prerequisites": "Prerequisite(s):CSE 220; andCSE 125,CSE 225, or equivalent Verilog experience. Concurrent enrollment inCSE 221is required. Enrollment restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE222A",
        "title": "VLSI Digital System Design",
        "description": "Advanced Very Large Scale Integrated (VLSI) custom integrated circuits. Topics include: semiconductors; field-effect transistors (FETs); circuits; and  interconnect simulation, along with advanced material on manufacturability, variability, short-channel devices, and non-volatile memories. Students cannot receive credit for this course andCSE 122. (Formerly Computer Engineering 222.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Matthew Guthaus (mrg)"
            ]
        }
    },
    {
        "code": "CSE222B",
        "title": "VLSI System-on-a-Chip Design",
        "description": "Design methodologies for Application Specific Integrated Circuits (ASICs). Topics include: behavioral specification; logic synthesis; standard-cell libraries; advanced timing analysis; and physical design automation tools. Familiarizes students with real-world tools during the design of a small system-on-a-chip project. Students are encouraged to fabricate and test their chips in an independent study. (Formerly Computer Engineering 223.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 222Aor permission of instructor. Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Matthew Guthaus (mrg)"
            ]
        }
    },
    {
        "code": "CSE225",
        "title": "Introduction to ASIC Systems Design",
        "description": "Verilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. Course may be taught in conjunction withCSE 125.",
        "credits": "7",
        "prerequisites": "Prerequisite(s):CSE 120orCSE 220. Enrollment is restricted to graduate students; undergraduates may enroll with permission of instructor. Students with hardware background should consult instructor for permission to enroll.",
        "quarters_offered": [
            "Fall",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Dustin Richmond (durichmo)"
            ],
            "Spring": [
                "Ethan Joseph Sifferman (esifferm)"
            ]
        }
    },
    {
        "code": "CSE226",
        "title": "Advanced Parallel Processing",
        "description": "Introduction to programming advanced parallel computer architecture. Topics may include: SIMD massively parallel processor arrays; streaming parallel coprocessors, such as graphics cards used for general-purpose processing (GPGPU); or other hybrid MIMD/SIMD architectures. Course has programming lab component, a project, and student presentation on related topics. (Formerly Computer Engineering 220.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduates may enroll with permission of instructor.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE228A",
        "title": "Agile Hardware Design",
        "description": "Agile Hardware Design techniques take the best of software engineering methods and apply them to improve hardware design productivity. Agile approaches not only reduce the time to solution, but they can also produce solutions which are better tailored for their target problems. In this synchronous in-person course, these techniques are covered while taking advantage of the Chisel hardware design language which brings the strengths of functional object-oriented programming to hardware design. Course consists of engaging lectures (intermixed coding demos and guest speakers) and progressive design assignments that culminate in a small project.",
        "credits": "5",
        "prerequisites": "Prerequisite(s): equivalent experience in at least two of the following three areas: logic design (Verilog/VHDL e.g.CSE 100/CSE 100LorCSE 125/CSE 125L), computer architecture (CSE 120/CSE 220), advanced programming (functional, object oriented, etc.). Enrollment is restricted to graduate students; open to advanced undergraduates with instructor consent.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Scott Beamer (sbeamer)"
            ]
        }
    },
    {
        "code": "CSE229",
        "title": "Field-Programmable Gate Arrays Computer-Assisted Design",
        "description": "Design methods for Field-Programmable Gate Arrays (FGPAs), including algorithms for technology mapping, routability estimation, placement, and routing. The relationship between FPGA architectures and their computer-aided design tools. Course project involves the modification and analysis of an FPGA tool. (Formerly Computer Engineering 229.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students or by consent of instructor.CSE 100,CSE 125,CSE 222A,CSE 225, or other digital design experience recommended.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE231",
        "title": "Advanced Operating Systems",
        "description": "A detailed study of the issues involved in operating systems design and implementation. Readings cover current research topics and systems of historical significance. Topics include (but are not restricted to) process and memory management, protection, security, synchronization, performance evaluation, file systems, distributed systems. (Formerly Computer Science 221.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduates by interview only.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Andrew Quinn (aquinn1)"
            ]
        }
    },
    {
        "code": "CSE232",
        "title": "Distributed Systems",
        "description": "Overview of research topics in distributed computer systems. Topics may include communication paradigms, process management, naming, synchronization and coordination, consistency and replication, fault tolerance, and security. Examples include distributed operating systems, distributed file and object systems, distributed document systems, and peer-to-peer systems. (Formerly Computer Science 232.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Fall",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Lindsey Kuper (lkuper)"
            ],
            "Spring": [
                "Mohsen Lesani (mlesani)"
            ]
        }
    },
    {
        "code": "CSE233",
        "title": "Advanced Computer Security",
        "description": "Overview of research topics in computer and network security. Topics may include cryptographic operations, security properties and policies, authentication and access control, attacks on computer systems and defenses against them, security in programming languages, and network protocols for security. (Formerly CMPS 223.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students or consent of instructor.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Cardenas (alacarde)"
            ]
        }
    },
    {
        "code": "CSE234",
        "title": "Understanding Cryptography",
        "description": "Cryptography has become ubiquitous, from light bulbs to atomic weapons. This course provides both a comprehensive introduction to applied cryptography and an additional focus on the human issues caused by bad implementations, bad processes, and broken algorithms. Knowledge of C Programming, Linux, and Virtual machines is required. (Formerly Computer Engineering 236 and Computer Science 236.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201. Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE235",
        "title": "Cyber-Physical Systems Security",
        "description": "Cyber-physical systems now permeate our lives; they include autonomous vehicles, the Internet of things, and modern control of our critical infrastructure such as the power grid. Learning about the threats against these systems and the possible defenses is essential for computer security practitioners. In this course, students read and analyze the latest published research in this area, and work on projects to address new problems.",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE237",
        "title": "Storage Systems",
        "description": "Topics include storage devices, storage architectures, local file systems, high-performance file systems, and next-generation storage devices and architectures; covers issues of performance, reliability, scalability, robustness, and security. (Formerly Computer Science 229.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE239A",
        "title": "Private Computation on Encrypted Data",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Ioannis Demertzis (idemertz)"
            ]
        }
    },
    {
        "code": "CSE240",
        "title": "Artificial Intelligence",
        "description": "Prepares students for doing research in artificial intelligence. Major topics covered are search and heuristics, knowledge representation, planning, deduction and inference, reinforcement learning, associative pattern retrieval, and adaptive search. Discussion includes current research issues in AI problem-solving methods. Individualized projects. (Formerly Computer Science 240.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduates may enroll by permission of the instructor.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Gilpin (lgilpin)"
            ]
        }
    },
    {
        "code": "CSE241",
        "title": "Knowledge Engineering",
        "description": "Introduction to the acquisition, representation, and application of knowledge in expert systems. Topics include production systems, backward and forward chaining, dependency-directed backtracking, reasoning with uncertainty, certainty factors, fuzzy systems, knowledge representation (rules, frames, and semantic nets), inference engines, and metaknowledge. Discussion includes current research issues in adaptive expert systems. Involves one major project. Undergraduates may enroll in this course if they have completedCSE 140. (Formerly Computer Science 241.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE242",
        "title": "Machine Learning",
        "description": "Introduction to machine learning algorithms. Covers learning models from fields of statistical decision theory and pattern recognition, artificial intelligence, and theoretical computer science. Topics include classification learning and the Probably Approximately Correct (PAC) learning framework, density estimation and Bayesian learning, EM, regression, and online learning. Provides an introduction to standard learning methods such as neural networks, decision trees, boosting, nearest neighbor, and support vector machines. Requirements include one major experimental learning project or theoretical paper. Students may not receive credit for both this course and CSE\u00a0142. (Formerly CMPS 242.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students in the computer science and engineering, computer engineering and computer science master's programs; and students in the following doctoral programs: computer science and engineering, computer engineering, computer science, applied mathematics, applied mathematics and statistics, biomolecular engineering and bioinformatics, electrical and computer engineering, electrical engineering, statistical science, and technology information management. Others may enroll by permission of the instructor.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Razvan V Marinescu (ramarine)"
            ]
        }
    },
    {
        "code": "CSE243",
        "title": "Data Mining",
        "description": "Covers the principles, algorithms, and applications of data mining, including mining sequential data, structured data, stream data, text data, spatiotemporal data, biomedical data, and other forms of complex data. Formerly TIM 245.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE244A",
        "title": "Foundations of Deep Learning",
        "description": "Provides foundations of deep learning algorithms and principles. Topics include neural networks, deep learning principles, deep learning architectures such as convolutional neural networks and recurrent neural networks, autoencoders, generative adversarial networks, and reinforcement learning. (CSE 244AandCSE 244Bformerly offered as one course, CSE 244.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201and familiarity with basic machine learning concepts. Enrollment is restricted to computer science and engineering graduate students.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Yuyin Zhou (yzhou284)"
            ]
        }
    },
    {
        "code": "CSE244B",
        "title": "Machine Learning for Natural Language Processing",
        "description": "Introduction to machine learning models and algorithms for Natural Language Processing. Covers deep learning approaches and traditional machine learning models. Topics include an introduction to standard neural network learning methods such as feed-forward neural networks, recurrent neural networks, convolutional neural networks, and encoder-decoder models with applications to natural language processing problems such as utterance classification and sequence tagging. Requirements include a midterm, final, programming assignments, and a project. (CSE 244AandCSE 244Bformerly offered as one course, CSE 244.)",
        "credits": "5",
        "prerequisites": "Prerequisite:CSE 244A.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE244C",
        "title": "Deep Learning for Advanced Computer Vision",
        "description": "This 10-week course delves deep into advanced computer vision with deep learning, introducing key concepts, applications, and the latest advancements in the field. Specifically, the course covers topics including image basics, convolutional neural network and its applications in different vision tasks (i.e., classification, detection, segmentation and video understanding), Transformer, self-supervised learning, vision language models, and three advanced topics. Upon completion, students should understand basics and cutting-edge advancements in this field and be able to solve real-world vision challenges.",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 244Ais recommended but not required. Enrollment is restricted to CSE graduate students; other graduate students may enroll by permission of the instructor.",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Yuyin Zhou (yzhou284)"
            ]
        }
    },
    {
        "code": "CSE245",
        "title": "Computational Models of Discourse and Dialogue",
        "description": "Focuses on classic and current theories and research topics in the computational modeling of discourse and dialogue, with applications to human-computer dialogue interactions; dialogue interaction in computer games and interactive story systems; and processing of human-to-human conversational and dialogue-like language such as e-mails. Topics vary depending on the current research of the instructor(s) and the interests of the students. Students read theoretical and technical papers from journals and conference proceedings and present class lectures. A research project is required.",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE246",
        "title": "Responsible Data Science",
        "description": "Graduate course covering basics of data science literacy and data science ethics. Topics include algorithmic discrimination, fairness, interpretability, privacy, and reproducibility. Key statistical topics such as generalization, causality, curse of dimensionality, and sampling bias are covered.",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE247",
        "title": "Projects in Artificial Intelligence",
        "description": "Overview of artificial intelligence (AI) and machine learning (ML) and principles, implementation and deployment pipeline, and approaches in solving domain-related problems. Topics covered through direct instruction, invited guest speakers, reviews of state-of-art research papers, and a team project. Students are given an opportunity to work on a quarter-long AI/ML project to be counted toward their master's degree project requirements. Enrollment is by instructor consent. Prior experience in machine learning and deep learning is required. (Formerly AI: Problem Solving and Intelligent Search.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Yi Zhang (yiz)"
            ]
        }
    },
    {
        "code": "CSE248",
        "title": "Foundations of Data Science",
        "description": "Examines the mathematical and algorithmic foundations of data science including high dimensional data, probabilistic inequalities, dimensionality reduction, correlation detection, streaming algorithms, and clustering. (Formerly Computer Science 218.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201. Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE249",
        "title": "Large-Scale Web Analytics and Machine Learning",
        "description": "Provides a systematic methodology and corresponding set of methods and analytical tools in stochastic models; reinforcement learning; stochastic (neuro-)dynamic programming; Bayesian graphical models; inference; and social networks used for web analytics and machine learning to achieve business intelligence (BI) and support research and applications in computer science, computer engineering, and electrical engineering, applied mathematics and statistics, business, management, and economics. Includes exposure to Hadoop for large-scale computation. Students should have solid background in probability equivalent to statistics, stochastic, methods, calculus, (and preferably) stochastic processes and optimization, or mathematical maturity and exposure to business intelligence and algorithms. (Formerly TIM 251.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 107orSTAT 131or permission of instructor. Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE250A",
        "title": "Computer Networks",
        "description": "Issues resulting from organizing communication among autonomous computers. Includes network models and switching techniques; medium access control protocols and local area networks; error control and retransmission strategies; routing algorithms and protocols; congestion control mechanisms and end-to-end protocols; application-level protocols; and application of concepts to wireless and wireline networks, with emphasis on the Internet. (Formerly Computer Engineering 252A.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Chen Qian (cqian12)"
            ]
        }
    },
    {
        "code": "CSE250B",
        "title": "Principles of Computer Communication",
        "description": "Focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course andCSE 152. (Formerly CMPE 252B.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 250A. Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE250C",
        "title": "High Speed Computer Networks",
        "description": "Fiber-optic technology; fiber-optic link design; network protocol concepts; coding and error control; high-speed local area and metropolitan area networks; gigabit networks; error and congestion control; photonic networks; research topics. (Formerly Computer Engineering 254.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 250B.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE253",
        "title": "Network Security",
        "description": "Fundamental mechanisms for network security and their application in widely deployed protocols. In-depth treatment of security mechanism at the data-link, network, and transport layers for both wired and wireless networks. Covers mechanisms for privacy and integrity, and methods for intrusion detection. (Formerly CMPE 253.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 250AandCSE 201. Enrollment restricted to graduate students.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Ram Sundara Raman (rsundar2)"
            ]
        }
    },
    {
        "code": "CSE257",
        "title": "Wireless and Mobile Networks",
        "description": "An interdisciplinary course on wireless communication and mobile computing. Covers the physical aspects of wireless communication but emphasizes higher protocol layers. Topics include cellular networks, packet radio and ad hoc networks, wireless transport protocols, security, and application-level issues. (Formerly Computer Engineering 257.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 250Aor permission of instructor.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE258",
        "title": "Spectral Graph Theory",
        "description": "Explores what eigenvalues and eigenvectors of graphs can tell us about their structure, and exploiting this knowledge for algorithmic purposes. It can be thought of as \"Advanced Linear Algebra with examples from Graph Theory.\"",
        "credits": "5",
        "prerequisites": "Prerequisite(s): linear algebra familiarity. Enrollment is restricted to graduate students, undergraduate students with linear algebra familiarity may enroll by permission of the instructor.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Alexandra Kolla (akolla)"
            ]
        }
    },
    {
        "code": "CSE259",
        "title": "Sensor Networks",
        "description": "Focuses on the networking aspects of sensor networks: protocols at the various layers and how they answer the specific requirements posed by these networks (e.g., data driven, energy efficient, etc.) and their applications (monitoring, tracking, etc.). Explores how physical layer and hardware issues may influence protocol design. (Formerly Computer Engineering 259.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 250A.CSE 257is recommended as a prerequisite.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE260",
        "title": "Computer Graphics",
        "description": "Introduces current research and techniques of modeling, 2D/3D transformation, matrix composition, shading algorithms, and rendering to obtain computer-generated imagery. Programming assignments and major project required. Students cannot receive credit for both this course andCSE 160. (Formerly Computer Science 260.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students; undergraduates by interview only.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE261",
        "title": "Advanced Visualization",
        "description": "Covers advanced topics in visualization, e.g., tensor-field visualization, uncertainty visualization, information visualization. Topics vary with differing offerings of the course. Course includes lectures, exam, research paper reading/presentation, and projects. Final project is expected to be at a sufficiently advanced level for submission to a conference. Students work individually or in pairs. (Formerly Computer Science 261.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE262",
        "title": "Computer Animation",
        "description": "An in-depth treatment of computer animation, including its origins in conventional animation, 2-D animation, inbetweening, motion control, morphing, graphical motion editors, animation languages, motion blur, simulation of articulated body motion, real-time animation, and special-purpose animation hardware. (Formerly Computer Science 262.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE263",
        "title": "Data Driven Discovery and Visualization",
        "description": "Explores high-quality interdisciplinary research using socio-economic data and software available on the Internet, and data curation, computation, and visualization to strengthen scientific inquiry to bear on large-scale societal problems. Applications include inequality, poverty, water, energy, environment, health, education, and democracy. Enrollment restricted to graduate students. Enrollment by instructor consent. (Formerly Computer Science 263.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE264",
        "title": "Image Analysis and Computer Vision",
        "description": "Introduces general concepts in computer vision, with an emphasis on geometric 3D reconstruction. Topics include radiometry, photometry, projective geometry, geometric camera model, epipolar geometry, stereo depth reconstruction, corner and edge features, point descriptors and matching, and optical flow.  (Formerly Computer Engineering 264.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students. Undergraduate students who are interested in enrolling should meet with the instructor first.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE265",
        "title": "Human-Computer Interaction",
        "description": "Theory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Individual research project. Interdisciplinary course for art, social science and engineering graduate students. Students cannot receive credit for this course andCSE 165.",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE266A",
        "title": "Data Visualization and Statistical Programming in R",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE266B",
        "title": "Advanced Statistical Programming in R",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE266C",
        "title": "Introduction to Data Wrangling",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE269",
        "title": "Approximation Algorithms",
        "description": "Meant for graduate students with a good mathematical background. Students should be familiar with discrete math, algorithms, calculus/probability, graph theory. Topics include clustering, linear programming, LP duality, semidefinite programming, etc.",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students or by permission of the instructor. Students taking this course need to have had at least one prior course in algorithms, similar toCSE 102or equivalent. Students need a solid background in analysis of algorithms, discrete math, probability theory, graph theory, and overall mathematical maturity.",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Evangelos Chatziafratis (evchatzi)"
            ]
        }
    },
    {
        "code": "CSE272",
        "title": "Information Retrieval",
        "description": "Course covers major topics of information retrieval including: characteristics and representation of text, several important retrieval and ranking models, content recommendation and classification; distributed or federated search, AI semantics and dialog for information access; human factors and interfaces; and evaluation, and domain-specific applications. A research project is required. (Formerly TIM 260.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students. Undergraduates may enroll with permission of instructor.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE276",
        "title": "Optimization Theory and Applications",
        "description": "A first graduate course in optimization with an emphasis on problems arising in management and engineering applications. Objectives are to become experts in problem formulation, comfortable with software for solving these problems, and familiar with analytical methods behind these solver technologies. (Formerly TIM 206.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s): calculus and linear algebra. Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE277",
        "title": "Random Process Models in Engineering",
        "description": "A first graduate course in stochastic process modeling and analysis with an emphasis on applications in technology management, information systems design, and engineering. (Formerly TIM 207.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students. Prerequisite:CSE 107or other undergraduate probability course recommended.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE279",
        "title": "Data Mining and Business Analytics in Knowledge Services",
        "description": "Provides students with systematic methodology and analytical tools in data and text mining and business analytics. Also provides an integrated perspective and examines use of these methods in the field of knowledge services, such as online marketing, sponsored search, health care, financial services, recommender systems, etc. Includes training in the basic elements of stochastic optimization and other algorithmic approaches, such as stochastic dynamic programming, statistics, constrained optimization, and machine learning with exposure to software tools. These methods enable firms to achieve rapid, effective, and profitable optimization of knowledge-services management. (Formerly TIM 209.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students. Students are expected to have undergraduate preparation in probability and statistics. Undergraduates may enroll with instructor approval.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280A",
        "title": "Seminar in Computer Science Research",
        "description": "Weekly seminar covering topics of current research in computer science. Enrollment by permission of instructor. (Formerly CMPS 280A, Seminar in Computer Science Research.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280C",
        "title": "Graduate Research Seminar",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280D",
        "title": "Seminar in Database Systems",
        "description": "Covers advanced research topics from the recent literature in database systems and related fields. Involves presentations from UCSC students and faculty, and guest talks from researchers in industry and other academic institutions.  Enrollment by permission of instructor. (Formerly 280D.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280F",
        "title": "Seminar on Software Engineering",
        "description": "Weekly seminar covering topics of current research in software engineering. (Formerly CMPS 280G.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280G",
        "title": "VLSI/CAD Seminar",
        "description": "Weekly seminar on advanced topics in VLSI and computer-aided design (CAD). Students present and discuss modern issues in semiconductor design, fabrication, and CAD. Frequent guest speakers present pertinent results from industry and academia. (Formerly Computer Engineering 280G.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Matthew Guthaus (mrg)",
                "Scott Beamer (sbeamer)",
                "Jose Renau (renau)",
                "Dustin Richmond (durichmo)",
                "Heiner Litz (hlitz)"
            ],
            "Winter": [
                "Matthew Guthaus (mrg)",
                "Scott Beamer (sbeamer)",
                "Jose Renau (renau)",
                "Dustin Richmond (durichmo)",
                "Heiner Litz (hlitz)"
            ],
            "Spring": [
                "Matthew Guthaus (mrg)",
                "Scott Beamer (sbeamer)",
                "Jose Renau (renau)",
                "Dustin Richmond (durichmo)",
                "Heiner Litz (hlitz)"
            ]
        }
    },
    {
        "code": "CSE280H",
        "title": "Seminar in Human Computation Systems",
        "description": "Covers advanced topics and current research in the general area of human computation. Material is drawn from several disciplines that involve or deal with human computation, including computer vision, human-computer interaction, databases, and machine learning. The course comprises presentations from faculty, enrolled students, and external visitors. (Formerly CMPS 280H.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280I",
        "title": "Seminar on Information Retrieval and Knowledge Management",
        "description": "Seminar series discussing advanced topics in information retrieval and knowledge management. Current research and literature are presented during each meeting. (Formerly 280I.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280J",
        "title": "Seminar on Computer Graphics",
        "description": "Weekly seminar covering topics of current research in computer graphics. Enrollment restricted to graduate students and by permission of instructor. (Formerly CMPS 280J.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280K",
        "title": "Sales and Marketing for Technologists and Engineers",
        "description": "Perspective on the theory, plus examples, and tools useful to technologists and engineers for successfully guiding and supporting sales and marketing endeavors and, thereby, ensuring funding, staffing, product appeal, positive customer relationships, and marketplace success. (Formerly TIM 280M.)",
        "credits": "2",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280L",
        "title": "Seminar on Logic in Computer Science",
        "description": "Covers advanced research topics from the recent literature in the uses of logic in computer science with particular emphasis on the applications of logic to the representation and the management of data. Involves presentations from UCSC students and faculty, and guest talks from researchers in other academic institutions or industrial research labs. Enrollment is by permission of the instructor and is restricted to graduate students. (Formerly CMPS 280L.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280M",
        "title": "Seminar on Machine Learning",
        "description": "Weekly seminar covering topics of current interest in machine learning. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly CMPS 280M.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280N",
        "title": "Seminar on Networks",
        "description": "Weekly seminar series covering topics of current research in networks and networked systems. Current research work and literature in these areas are discussed. Prerequisite(s): permission of instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280N.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Katia Obraczka (obraczka)",
                "Chen Qian (cqian12)"
            ],
            "Winter": [
                "Katia Obraczka (obraczka)",
                "Chen Qian (cqian12)"
            ],
            "Spring": [
                "Katia Obraczka (obraczka)",
                "Chen Qian (cqian12)"
            ]
        }
    },
    {
        "code": "CSE280O",
        "title": "Seminar in Applied Programming Languages",
        "description": "Covers current research in language-based approaches to security, distributed systems, databases, and formal verification. Students read and present papers from academic journals and conferences.",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Lindsey Kuper (lkuper)",
                "Tyler Rey Sorensen (tysorens)"
            ],
            "Winter": [
                "Lindsey Kuper (lkuper)",
                "Tyler Rey Sorensen (tysorens)"
            ],
            "Spring": [
                "Lindsey Kuper (lkuper)",
                "Tyler Rey Sorensen (tysorens)"
            ]
        }
    },
    {
        "code": "CSE280P",
        "title": "Seminar on Parallel Processing",
        "description": "Weekly seminar series covering topics of current research in parallel systems, architectures, and algorithms. Current research work and literature in these areas are discussed. (Formerly Computer Engineering 280P.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Jose Renau (renau)"
            ],
            "Winter": [
                "Jose Renau (renau)"
            ],
            "Spring": [
                "Jose Renau (renau)"
            ]
        }
    },
    {
        "code": "CSE280S",
        "title": "Seminar on Computer Systems",
        "description": "Weekly seminar series covering topics of current research in computer systems. Enrollment by permission of instructor. (Formerly CMPS 280S AND CMPE 280S.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Heiner Litz (hlitz)",
                "Andrew Quinn (aquinn1)"
            ],
            "Winter": [
                "Heiner Litz (hlitz)"
            ],
            "Spring": [
                "Heiner H Litz (hlitz)"
            ]
        }
    },
    {
        "code": "CSE280T",
        "title": "Seminar on New Technologies",
        "description": "Weekly seminar series in which distinguished speakers from industry, universities, and government discuss current developments in networking and computer technology. The emphasis is on open research questions that may lead to collaborative work with faculty and graduate students. (Formerly Computer Engineering 280T.)",
        "credits": "2",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE280V",
        "title": "Seminar on Computer Vision",
        "description": "Weekly graduate-level seminar series discussing advanced topics in computer vision and image analysis. Current research and literature presented during each meeting. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280V.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Roberto Manduchi (manduchi)"
            ],
            "Winter": [
                "Roberto Manduchi (manduchi)"
            ],
            "Spring": [
                "Roberto Manduchi (manduchi)"
            ]
        }
    },
    {
        "code": "CSE280X",
        "title": "Seminar in Distributed Systems",
        "description": "Covers advanced research topics from the recent literature in distributed systems and related fields. Involves presentations from UCSC students and faculty. Enrollment is restricted to graduate students and by permission of the instructor.",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Peter Alvaro (palvaro)"
            ],
            "Winter": [
                "Peter Alvaro (palvaro)"
            ],
            "Spring": [
                "Peter Alvaro (palvaro)"
            ]
        }
    },
    {
        "code": "CSE280Z",
        "title": "Seminar in Natural Language Processing and Dialogue",
        "description": "Covers advanced topics and current research in natural language processing. Focuses on student presentations and seminar participation. Enrollment is restricted to graduate students. Enrollment is by permission of the instructor. (Formerly CMPS 280Z.)",
        "credits": "2",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE285",
        "title": "Technical Writing for Engineering Graduates",
        "description": "Writing skills development for graduate engineers. Students produce a major writing project with many subtasks. Exercises includes fellowship application; mathematical and algorithmic description; use of tables and graphs; experiment description; and producing technical web sites, presentations, and posters. Enrollment is restricted to graduate students in biomolecular engineering, computer science and engineering, computer science, and electrical and computer engineering and by permission of the instructor. (Formerly CMPE 285.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290A",
        "title": "Topics in Algorithms and Complexity Theory: Probabilistic Algorithms and Average Case Analysis",
        "description": "Graduate seminar in algorithms and complexity theory on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings and present class lectures. Guest lectures may supplement the student presentations. A research project and/or paper may be required. (Formerly Computer Science 290A.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290C",
        "title": "Advanced Topics in Machine Learning",
        "description": "In-depth study of current research topics in machine learning. Topics vary from year to year but include multi-class learning with boosting and SUM algorithms, belief nets, independent component analysis, MCMC sampling, and advanced clustering methods. Students read and present research papers; theoretical homework in addition to a research project. (Formerly Computer Science 290C.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall",
            "Winter",
            "Spring"
        ],
        "instructors": {
            "Fall": [
                "Razvan Marinescu (ramarine)"
            ],
            "Winter": [
                "Yuyin Zhou (yzhou284)"
            ],
            "Spring": [
                "Yang Liu (yangliu)"
            ]
        }
    },
    {
        "code": "CSE290D",
        "title": "Neural Computation",
        "description": "An introduction to the design and analysis of neural network algorithms. Concentrates on large artificial neural networks and their applications in pattern recognition, signal processing, and forecasting and control. Topics include Hopfield and Boltzmann machines, perceptions, multilayer feed forward nets, and multilayer recurrent networks. (Formerly Computer Science 290D.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Cihang Xie (cixie)"
            ]
        }
    },
    {
        "code": "CSE290E",
        "title": "Object-Oriented Programming Methodology",
        "description": "Object-oriented programming methodology is the application of abstract-data types and polymorphism to coding solution. Topics geared to beginning thesis research in this field. (Formerly Computer Science 290E.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290F",
        "title": "Applications of Combinatorics",
        "description": "Combinatorial mathematics, including summation methods, working with binomial coefficients, combinatorial sequences (Fibonacci, Stirling, Eulerian, Harmonic, Bernoulli numbers), generating functions and their uses, Bernoulli processes, and other topics in discrete probability. Oriented toward problem solving, applications mainly to computer science, but also physics. (Formerly Computer Science 290F.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290G",
        "title": "Topics in Software Engineering",
        "description": "Research seminar on current topics in software engineering. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings. Synthesis and understanding of materials is demonstrated by a required research project. (Formerly Computer Science 290G.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290H",
        "title": "Topics in Database Systems",
        "description": "Focuses on current research topics in database systems. Different offerings cover different topics depending on current research of instructor(s) and the interests of students. Students read technical papers from journals and conference proceedings and present class lectures. A research project is required. (Formerly Computer Science 290H.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290J",
        "title": "Advanced Topics in Visual Computing",
        "description": "A graduate seminar in computer graphics on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on interests of students. Primary areas of interest are likely to be scientific visualization, modeling, rendering, scattered data techniques, wavelets, and color and vision models. Students read technical papers and present class lectures. Guest lecturers supplement the student presentations. A research project is required. (Formerly Computer Science 290B.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290K",
        "title": "Advanced Topics in Natural Language Processing",
        "description": "Teaches participants about current methods and directions in active areas of Natural Language Processing research and applications. Students perform independent research and hone skills with state-of-the-art NLP tools and techniques.",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290L",
        "title": "Topics in Crowdsourcing and Collaboration",
        "description": "Explores the foundations of crowdsourcing and computer-mediated collaboration. Covers the algorithmic and statistical foundations of crowdsourcing, introducing and analyzing algorithms, and experimenting with concrete systems. Also, provides an introduction to computational systems for mediating user interaction and collaboration. (Formerly Computer Science 290L.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290M",
        "title": "Topics in Parallel Computation",
        "description": "Investigates selected topics in applied parallel computation. Topics may include numerical methods, artificial intelligence and machine learning algorithms, graphics and image processing, systolic algorithms, and the interplay between hardware and algorithms. Students are encouraged to investigate and discuss the parallelization of their own research. (Formerly Computer Engineering 290M.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290N",
        "title": "Topics in Computer Performance",
        "description": "Selected topics of current interest in the area of computer system performance. Subjects may include aspects of large systems, performability, computer networks, storage subsystems, and nontraditional approaches and are subject to periodic revision. (Formerly Computer Engineering 290N.)",
        "credits": "5",
        "prerequisites": "Enrollment is restricted to graduate students.",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Abel Souza (absouza)"
            ]
        }
    },
    {
        "code": "CSE290O",
        "title": "Algorithmic Foundations of Convex Optimization",
        "description": "Focuses on some of the foundational aspects of convex and its relationship to modern machine learning. Discusses positive results--how can you solve convex optimization problems--and negative ones with statements like This family of problems is too hard to be solved in reasonable time. Course is divided into three parts, each exploring a different aspect of convex optimization: 1) algorithmic frameworks; 2) Oracle complexities; 3) the power of randomness. Through this course students are exposed to general concepts of convex geometry, learning theory, and rigorous proofs. (formerly CMPS 290O.)",
        "credits": "5",
        "prerequisites": "Prerequisite(s):CSE 201andCSE 242. Enrollment is restricted to computer engineering and computer science graduate students.",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290P",
        "title": "Data Privacy via Machine Learning, and Back",
        "description": "Helps students achieve both expository knowledge and expertise in the field of data privacy. Focuses on fundamental techniques used in designing privacy-preserving, machine-learning systems in both academia and in the industry. Students are expected to read and understand recent research papers in the topic. (Formerly Computer Science 290P.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290Q",
        "title": "Topics in Programming Languages",
        "description": "Current research topics on computer programming languages. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290Q.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Spring"
        ],
        "instructors": {
            "Spring": [
                "Kyle A Miller (kymiller)"
            ]
        }
    },
    {
        "code": "CSE290S",
        "title": "Advanced Topics in Computer Systems",
        "description": "Focuses on current research topics in computer systems. Topics vary from year to year depending on the current research of the instructor(s) and the interests of the students. Students read technical papers from current journals and conference proceedings, and present class lectures. A research project is required. (Formerly Computer Science 290S.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Fall"
        ],
        "instructors": {
            "Fall": [
                "Peter Alvaro (palvaro)"
            ]
        }
    },
    {
        "code": "CSE290T",
        "title": "Topics in Computing for Society",
        "description": "Current research topics on computer technology that is intentionally targeted to benefiting society. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290T.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE290X",
        "title": "Cryptography and Computer Security",
        "description": "Research seminar on encryption and related technologies. Topics include theory of codes, random sequences and generators, public key cryptosystems, private key cyphers, key exchange protocols, quantum computing and cryptography. Major project required. Prerequisite: interview with instructor. (Formerly Computer Science 290X.)",
        "credits": "5",
        "prerequisites": "Yes",
        "quarters_offered": [
            "Winter"
        ],
        "instructors": {
            "Winter": [
                "Yuanchao Xu (yxu314)"
            ]
        }
    },
    {
        "code": "CSE290Y",
        "title": "Quantum Computing",
        "description": "N/A",
        "credits": "N/A",
        "prerequisites": "N/A",
        "quarters_offered": [],
        "instructors": {}
    },
    {
        "code": "CSE293",
        "title": "Advanced Topics in Computer Engineering",
        "description": "A graduate seminar on a research topic in computer engineering which varies according to instructor. Possible topics include, but are not limited to, communication networks, data compression, special-purpose architectures, computer arithmetic, software reliability and reusability, systolic arrays. (Formerly Computer Engineering 293.)",
        "credits": "5",
        "prerequisites": "N/A",
        "quarters_offered": [
            "Fall",
            "Winter"
        ],
        "instructors": {
            "Fall": [
                "Liting Hu (lhu82)"
            ],
            "Winter": [
                "Ethan Joseph Sifferman (esifferm)"
            ]
        }
    }
]